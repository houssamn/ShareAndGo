Window CreateTrip {
   Person caller
   Trip tripToCreate

   String text := ['Create Trip']

    Label CreateTrip_L {
        String text := ['Create Trip']
    }

    Label SelectZone_L {
        String text := ['Please Select A Zone']
    }

    ComboBox ZoneCB {
        Set(Zone) rows := [Zone.allInstances()]
        Zone selected := [null]

        Label ZoneName {
            String text := [$CreateTrip.ZoneCB.row$.zname]
        }
    }

    //This Button is Added because the onChange property for the ZoneCB does not work
    Button ChangeZoneSelection { 
        String text := ['Confirm Zone Change']
        event onClick { //should be onChange but onChange doesn't work ??
            reevaluate CreateTrip.LocationsCB.rows
        }
    }

    Label AddLocation_L {
        String text := ['Available Locations']
    }

    ComboBox LocationsCB {
        Set(Location) rows := [$CreateTrip.ZoneCB.selected$.locations]
        Location selected := [null]

        Label LocationName {
            String text := [$CreateTrip.LocationsCB.row$.name]
        }

    }

    Button AddToTrip_B {
        String text:= ['Add To Trip']
        event onClick {
               if [not $CreateTrip.LocationsCB.selected$.oclIsUndefined()] {
                    try{
                        [$CreateTrip.tripToCreate$.childLocations] += [$CreateTrip.LocationsCB.selected$]
                        reevaluate CreateTrip.LocationsTillNow.rows
                    }catch(SecurityException){
                        notification(['Message'], ['You Are Not Allowed To Add This Location'], [500])
                    }
               }else {
                  notification(['Message'], ['Please Select A Location'], [500])
               }
        }

    }

    Label LocationsTable_L {
        String text := ['Locations Till Now']
    }


    Table LocationsTillNow {
    Set(Location) rows := [$CreateTrip.tripToCreate$.childLocations->asSet()]
    Location selected := [null]
         columns {
            ['location']  : Label locationName {
                String text
                event onView (text) {
                    try {
                        text := [$CreateTrip.LocationsTillNow.row$.name]
                    }
                    catch(SecurityException) {
                        text := ['****']
                    }
                }
            }
        }
    }

    //Remove Selected Location From List Button
    Button RemoveSelected_B {
        String text := ['Remove Selected From List']
        event onClick {
               if [not $CreateTrip.LocationsTillNow.selected$->oclIsUndefined()] {
                try {
                    [$CreateTrip.tripToCreate$.childLocations] -= [$CreateTrip.LocationsTillNow.selected$]
                    reevaluate CreateTrip.LocationsTillNow.rows
                }catch(SecurityException){
                    notification(['Message'], ['You are not allowed to remove this location'], [500])
                }
               }else {
                notification(['Message'], ['No Location Selected'], [500])
               }
        }
    }

    Label EnterPrice_L {
        String text := ['Enter A Price']
    }

    TextField Price_TF {
        String text := [null]
    }

    Label ChooseDate_L {
        String text := ['Choose A Start Date']
    }
   
    DateField Chooser_DF {
        LocalDateTime value := [null]
    }

    Button Confirm_B {
        String text := ['Confirm']
        event onClick {
            //Set Price Value
            if [$Price_TF.text$ = null] {
                notification(['Message'], ['You forgot to enter a price buddy ..'] , [500])
            }else{
                if [ ($CreateTrip.Chooser_DF.value$.oclIsUndefined() ) or   $CreateTrip.Chooser_DF.value$ < LocalDateTime.now() ] { //Check Again that it is a valid start date
                    notification(['Error'], ['please select a VALID start date'] , [500])
                }else {
                    try {
                        [$CreateTrip.tripToCreate$.price] := [$Price_TF.text$.toReal()] 
                        [$CreateTrip.tripToCreate$.startDate] := [$Chooser_DF.value$] 
                        [$CreateTrip.tripToCreate$.isCreated] := [true] // This makes it visible to other users now
                        notification(['Message'] ,  ['Trip Created Successfully'], [500])
                        back
                     }catch(SecurityException){
                        notification(['Error'], ['An Error Occurred While processing your request. Please contact support.'], [500])
                     }
                 }
              
            }
        }
    }


    Button Back_B {
            String text := ['Back']
            event onClick {
                delete [$CreateTrip.tripToCreate$]
                back
            }
    }

}